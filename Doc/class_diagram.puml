@startuml Ant

class Config {
    + {static} double DEFAULT_FOOD_CONSUMING_TICK = 0.001
    + {static} int DEFAULT_HOURS_BEFORE_DEATH = 8760

    + {static} int NEW_ANT_EVERY_DAY = 2    
    + {static} double QUEEN_FOOD_CONSUMING_TICK = 0.01
    + {static} int QUEEN_HOURS_BEFORE_DEATH = 87600

    + {static} int WORKER_HOURS_BEFORE_ADULT = 360
    + {static} int WORKER_MAX_FOOD_CARRIED_AMOUNT = 1

    + {static} int SCOOT_HOURS_BEFORE_ADULT = 48

    + {static} int SOLDIER_HOURS_BEFORE_VISIT_COLONY = 2400

    + {static} int SLAVE_OWNER_MAX_HOURS_SURVIVE_BEFORE_FEEDING = 240

    + {static} int ROCK_MAX_ANT_ON_CELL = 0

    + {static} int BASIC_CELL_MAX_ANT_ON_CELL = 12

    + {static} int COLONY_MAX_ANT_ON_CELL = 100

    + {static} double ROCK_PERCENT = 0.3
    + {static} double ROCK_SIZE_ONE_PERCENT = 0.5
    + {static} double ROCK_SIZE_TWO_PERCENT = 0.3
    + {static} double ROCK_SIZE_THREE_PERCENT = 0.1
    + {static} double ROCK_SIZE_FOUR_PERCENT = 0.5
    + {static} double ROCK_SIZE_FIVE_PERCENT = 0.4
    + {static} double ROCK_SIZE_SIZE_PERCENT = 0.1

    + {static} double FOOD_CASE_NUMBER_PERCENT = 0.0002
    + {static} int FOOD_UNIT_VALUE = 10

    + {static} int LENGTH = 211
    + {static} int HEIGHT = 201
}

abstract class Ant {
    - {static} int colonyFood = 0
    
    - BoardCell currentCell
    - int hoursBeforeDeath
    - int foodConsumedEachDay
    - int hoursSinceLastFeeding = 0
    - List<BoardCell> cellTraveledSinceColony
    
    + Ant(int hoursBeforeDeath, int foodConsumedEachDay)

    + void tick()
    + boolean attackAnt(Ant target)

    - void eatFood()
    - void putPheromones()
    - void kill()
}

class Queen {
    - int nbChild = 0
    - boolean wasAssaulted = false
}

abstract class AntAge {
    + AntAge(int hoursBeforeAdult)

    - int hoursBeforeAdult

    + boolean isAdult()
}

class Worker {
    - double pheromoneAmount = 500
    - double foodCarriedAmount = 0

    - void dropFood()
    - void visitColony()
}

class Scout {
    
}

class Soldier {
    - int hoursSinceColonyVisited = 0
}

class SlaveOwner {
    - int larvaCarried = 0
}

abstract class BoardCell {
    - double pheromoneAmount = 0
    - boolean visited = false
    - int maxAntOnCell = 0
    - List<Ant> antOnCell

    + BoardCell(int maxAntOnCell)
    + void tick()
    - void pheromoneSpreading()
}

class RockCell {
    
}

class BasicCell {
    - double foodAmount = 0

    + void takeFood(Ant ant)
}

class ColonyCell {
    
}

class Board {
    - BoardCell[][] cells
    - List<ColonyCell> coloniesCells

    + Board(List<BoardCell> cells, List<ColonyCell> coloniesCells)
    
    + List<BoardCell> getNearbyCells(BoardCell cell)
}

class BoardGenerator {
    - BoardCell[][] cells
    - List<ColonyCell> coloniesCell

    + {static} Board generateBoard()

    - void generateRock()
    - void generateClassicFood()
    - void generateBigFood()
    - void generateColony()
}

class Simulation {
    + void runGame()
}

RockCell --|> BoardCell
BasicCell --|> BoardCell
ColonyCell --|> BoardCell

Simulation -- Board
Board -- BoardGenerator
Board o-- BoardCell

BoardCell *--> Ant

Worker --|> AntAge
Scout --|> AntAge

Worker --|> Ant
Scout --|> Ant
Soldier --|> Ant
SlaveOwner --|> Ant
Queen --|> Ant

@enduml